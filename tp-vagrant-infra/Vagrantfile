# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  
  # Box de base
  config.vm.box = "ubuntu/bionic64"

  # Tableau des VMs à créer 
  machines = [
    { name: "lb", ip: "192.168.56.10", script: "setup_lb.sh", mem: 512 },
    { name: "web1", ip: "192.168.56.11", script: "setup_web.sh", mem: 512 },
    { name: "web2", ip: "192.168.56.12", script: "setup_web.sh", mem: 512 },
    { name: "db-master", ip: "192.168.56.13", script: "setup_db_master.sh", mem: 1024 },
    { name: "db-slave", ip: "192.168.56.14", script: "setup_db_slave.sh", mem: 1024 },
    { name: "monitoring", ip: "192.168.56.15", script: "setup_monitoring.sh", mem: 1024 },
    { name: "client", ip: "192.168.56.16", script: "setup_client.sh", mem: 256 }
  ]


  # Configuration des machines
  machines.each do |machine|
    config.vm.define machine[:name] do |node|
      node.vm.hostname = machine[:name]
      node.vm.network "private_network", ip: machine[:ip]
      
      node.vm.provider "virtualbox" do |vb|
        vb.memory = machine[:mem] || 512
        vb.cpus = 1
        vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      end

      # Provisioning si script défini
      if machine[:script]
        node.vm.provision "shell", path: "scripts/#{machine[:script]}"
      end
    end
  end
  
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
